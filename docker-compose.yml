version: '3.6'

services:
  api-gateway:
    build: ./api-gateway
    hostname: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - customers-service
      - musiccatalog-service
      - storelocation-service

  customers-service:
    build: customers-service
    hostname: customers-service
    container_name: customers-service
    ports:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql1:
        condition: service_healthy

  musiccatalog-service:
    build: musiccatalog-service
    hostname: musiccatalog-service
    container_name: musiccatalog-service
    ports:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql2:
        condition: service_healthy

  storelocation-service:
    build: storelocation-service
    hostname: storelocation-service
    container_name: storelocation-service
    ports:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      postgres1:
        condition: service_healthy

  orders-service:
    build: orders-service
    hostname: orders-service
    ports:
      - "8080"                                 # Map the container port to the host port - 8084
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb
      - customers-service
      - musiccatalog-service
      - storelocation-service

  mysql1:
    image: mysql:5.7
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=customers-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    volumes:
      - ./data/mysql1:/var/lib/mysql1
      - ./data/init.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uuser", "-ppwd", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10

  mysql2:
    image: mysql:5.7
    ports:
      - "3308:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=musiccatalog-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    volumes:
      - ./data/mysql2:/var/lib/mysql2
      - ./data/init.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uuser", "-ppwd", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10

  phpmyadmin1:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin1
    links:
      - mysql1
    restart: always
    ports:
      - 5013:80
    environment:
      - PMA_HOST=mysql1
      - PMA_PORT=3306
      - PMA_ARBITRARY=1

  phpmyadmin2:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin2
    links:
      - mysql2
    restart: always
    ports:
      - 5014:80
    environment:
      - PMA_HOST=mysql2
      - PMA_PORT=3306
      - PMA_ARBITRARY=1

  postgres1:
    image: postgres:latest
    container_name: postgres1-storelocation
    hostname: postgres1
    environment:
      - POSTGRES_USER=user
      - PGUSER=user
      - POSTGRES_PASSWORD=pwd
      - POSTGRES_DB=storelocation-db
    ports:
      - "5432:5432"
    healthcheck:
      test: "pg_isready -h postgres1"
      interval: 10s
      timeout: 5s
      retries: 5


  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-storelocation
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=felix.meplon@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - 9000:80
    depends_on:
      - postgres1

  mongodb:
    image: mongo
    container_name: mongo_db
    ports:
      - 27017:27017
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pwd

  mongo-express:
      image: mongo-express
      container_name: mongo-express
      restart: always
      ports:
        - 8085:8081
      environment:
        - ME_CONFIG_MONGODB_ADMINUSERNAME=user
        - ME_CONFIG_MONGODB_ADMINPASSWORD=pwd
        - ME_CONFIG_MONGODB_SERVER=mongodb

volumes:
  mongo: { }
